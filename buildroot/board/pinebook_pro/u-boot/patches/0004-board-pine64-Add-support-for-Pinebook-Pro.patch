From 6b56b1a11c13828501ca54c3e548047fdf0db08d Mon Sep 17 00:00:00 2001
From: Tobias Schramm <t.schramm@manjaro.org>
Date: Mon, 13 Apr 2020 21:10:59 +0200
Subject: [PATCH 4/4] board: pine64: Add support for Pinebook Pro

Signed-off-by: Tobias Schramm <t.schramm@manjaro.org>
---
 arch/arm/dts/Makefile                         |   1 +
 arch/arm/mach-rockchip/rk3399/Kconfig         |  19 +++
 board/pine64/pinebook-pro_rk3399/Kconfig      |  15 +++
 board/pine64/pinebook-pro_rk3399/MAINTAINERS  |   6 +
 board/pine64/pinebook-pro_rk3399/Makefile     |   7 +
 board/pine64/pinebook-pro_rk3399/README       | 122 ++++++++++++++++++
 .../pinebook-pro_rk3399/pinebook-pro_rk3399.c |  52 ++++++++
 configs/pinebook-pro_defconfig                |  97 ++++++++++++++
 include/configs/pinebook-pro_rk3399.h         |  42 ++++++
 9 files changed, 361 insertions(+)
 create mode 100644 board/pine64/pinebook-pro_rk3399/Kconfig
 create mode 100644 board/pine64/pinebook-pro_rk3399/MAINTAINERS
 create mode 100644 board/pine64/pinebook-pro_rk3399/Makefile
 create mode 100644 board/pine64/pinebook-pro_rk3399/README
 create mode 100644 board/pine64/pinebook-pro_rk3399/pinebook-pro_rk3399.c
 create mode 100644 configs/pinebook-pro_defconfig
 create mode 100644 include/configs/pinebook-pro_rk3399.h

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 0127a91a82..3bdfde7dfe 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -125,6 +125,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3399) += \
 	rk3399-nanopi-m4.dtb \
 	rk3399-nanopi-neo4.dtb \
 	rk3399-orangepi.dtb \
+	rk3399-pinebook-pro.dtb \
 	rk3399-puma-ddr1333.dtb \
 	rk3399-puma-ddr1600.dtb \
 	rk3399-puma-ddr1866.dtb \
diff --git a/arch/arm/mach-rockchip/rk3399/Kconfig b/arch/arm/mach-rockchip/rk3399/Kconfig
index 868e85fc2a..e17e8dc676 100644
--- a/arch/arm/mach-rockchip/rk3399/Kconfig
+++ b/arch/arm/mach-rockchip/rk3399/Kconfig
@@ -81,6 +81,24 @@ config TARGET_ROCKPRO64_RK3399
 	   * GPIO expansion ports
 	   * DC 12V/2A
 
+config TARGET_PINEBOOK_PRO_RK3399
+	bool "Pine64 Pinebook Pro laptop"
+	help
+	  Pinebook Pro is a laptop produced by Pine64. Key features:
+
+	   * Rockchip RK3399
+	   * 4GB Dual-Channel LPDDR3
+	   * SD card slot
+	   * eMMC
+	   * 128Mb SPI Flash
+	   * M.2 M-Key slot with 4 PCIe lanes
+	   * AP2566 WiFI/BT module
+	   * 14" Full-HD eDP screen
+	   * DP out via Type-C alternate mode
+	   * USB 3.0, 2.0
+	   * USB Type C power and data
+	   * DC 5V/3A
+
 endchoice
 
 config ROCKCHIP_BOOT_MODE_REG
@@ -118,5 +136,6 @@ source "board/theobroma-systems/puma_rk3399/Kconfig"
 source "board/vamrs/rock960_rk3399/Kconfig"
 source "board/google/gru/Kconfig"
 source "board/pine64/rockpro64_rk3399/Kconfig"
+source "board/pine64/pinebook-pro_rk3399/Kconfig"
 
 endif
diff --git a/board/pine64/pinebook-pro_rk3399/Kconfig b/board/pine64/pinebook-pro_rk3399/Kconfig
new file mode 100644
index 0000000000..0bbe32bd79
--- /dev/null
+++ b/board/pine64/pinebook-pro_rk3399/Kconfig
@@ -0,0 +1,15 @@
+if TARGET_PINEBOOK_PRO_RK3399
+
+config SYS_BOARD
+	default "pinebook-pro_rk3399"
+
+config SYS_VENDOR
+	default "pine64"
+
+config SYS_CONFIG_NAME
+	default "pinebook-pro_rk3399"
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+
+endif
diff --git a/board/pine64/pinebook-pro_rk3399/MAINTAINERS b/board/pine64/pinebook-pro_rk3399/MAINTAINERS
new file mode 100644
index 0000000000..09d29db182
--- /dev/null
+++ b/board/pine64/pinebook-pro_rk3399/MAINTAINERS
@@ -0,0 +1,6 @@
+PINEBOOK-PRO
+M:      Tobias Schramm <t.schramm@manjaro.org>
+S:      Maintained
+F:      board/pine64/pinbook-pro_rk3399
+F:      include/configs/pinebook-pro_rk3399.h
+F:      configs/pinebook-pro_defconfig
diff --git a/board/pine64/pinebook-pro_rk3399/Makefile b/board/pine64/pinebook-pro_rk3399/Makefile
new file mode 100644
index 0000000000..a7a23a3055
--- /dev/null
+++ b/board/pine64/pinebook-pro_rk3399/Makefile
@@ -0,0 +1,7 @@
+#
+# (C) Copyright 2020 Tobias Schramm
+#
+# SPDX-License-Identifier:     GPL-2.0+
+#
+
+obj-y	+= pinebook-pro_rk3399.o
diff --git a/board/pine64/pinebook-pro_rk3399/README b/board/pine64/pinebook-pro_rk3399/README
new file mode 100644
index 0000000000..342d359875
--- /dev/null
+++ b/board/pine64/pinebook-pro_rk3399/README
@@ -0,0 +1,122 @@
+Introduction
+============
+
+RK3399 key features we might use in U-Boot:
+* CPU: ARMv8 64bit Big-Little architecture,
+*      Big: dual-core Cortex-A72
+*      Little: quad-core Cortex-A53
+* IRAM: 200KB
+* DRAM: 4GB-128MB dual-channel
+* eMMC: support eMMC 5.0/5.1, suport HS400, HS200, DDR50
+* SD/MMC: support SD 3.0, MMC 4.51
+* USB: USB3.0 type-C port *2 with dwc3 controller
+*      USB2.0 EHCI host port *2
+* Display: RGB/HDMI/DP/MIPI/EDP
+
+Pinebook Pro features:
+* regulator: pwm regulator for CPU B/L
+* PMIC: rk808
+* debug console: UART2
+* 14" eDP scren
+
+In order to support Arm Trust Firmware(ATF), we can use either SPL or
+miniloader from rockchip to do:
+* do DRAM init
+* load and verify ATF image
+* load and verify U-Boot image
+
+Here is the step-by-step to boot to U-Boot on rk3399.
+
+Get the Source and prebuild binary
+==================================
+
+  > mkdir ~/pinebook-pro_rk3399
+  > cd ~/pinebook-pro_rk3399
+  > git clone https://github.com/ARM-software/arm-trusted-firmware.git
+  > git clone https://github.com/rockchip-linux/rkbin.git
+  > git clone https://github.com/rockchip-linux/rkdeveloptool.git
+
+
+Compile ATF
+===========
+
+  > cd arm-trusted-firmware
+  > make realclean
+  > make CROSS_COMPILE=aarch64-linux-gnu- PLAT=rk3399 bl31
+
+  Get bl31.elf in this step, copy it to U-Boot root dir:
+  > cp build/rk3399/release/bl31/bl31.elf ../u-boot/
+
+  Or you can get the bl31.elf directly from Rockchip:
+  > cp rkbin/rk33/rk3399_bl31_v1.00.elf ../u-boot/bl31.elf
+
+
+Compile U-Boot
+==============
+
+  > cd ../u-boot
+  > export ARCH=arm64
+  > export CROSS_COMPILE=aarch64-linux-gnu-
+  > make pinebook-pro_defconfig
+  > make
+  > make u-boot.itb
+
+  Get spl/u-boot-spl.bin and u-boot.itb in this step.
+
+Compile rkdeveloptool
+=====================
+
+Get rkdeveloptool installed on your Host in this step.
+
+Follow instructions in latest README, example:
+  > cd ../rkdeveloptool
+  > autoreconf -i
+  > ./configure
+  > make
+  > sudo make install
+
+Both origin binaries and Tool are ready now, choose either option 1 or
+option 2 to deploy U-Boot.
+
+Package the image
+=================
+
+Package the image for U-Boot SPL(option 1)
+--------------------------------
+  > cd ..
+  > tools/mkimage -n rk3399 -T rksd -d spl/u-boot-spl.bin idbspl.img
+
+  Get idbspl.img in this step.
+
+Package the image for Rockchip miniloader(option 2)
+------------------------------------------
+  > cd ..
+  > cp arm-trusted-firmware/build/rk3399/release/bl31.elf rkbin/rk33
+  > ./rkbin/tools/trust_merger rkbin/tools/RK3399TRUST.ini
+  > ./rkbin/tools/loaderimage --pack --uboot u-boot/u-boot-dtb.bin uboot.img
+
+  Get trust.img and uboot.img in this step.
+
+Flash the image to eMMC
+=======================
+
+Flash the image with U-Boot SPL(option 1)
+-------------------------------
+Power on(or reset with RESET KEY) with MASKROM KEY preesed, and then:
+  > rkdeveloptool db rkbin/rk33/rk3399_loader_v1.08.106.bin
+  > rkdeveloptool wl 64 u-boot/idbspl.img
+  > rkdeveloptool wl 0x4000 u-boot/u-boot.itb
+  > rkdeveloptool rd
+
+Flash the image with Rockchip miniloader(option 2)
+----------------------------------------
+Power on(or reset with RESET KEY) with MASKROM KEY preesed, and then:
+  > rkdeveloptool db rkbin/rk33/rk3399_loader_v1.08.106.bin
+  > rkdeveloptool ul rkbin/rk33/rk3399_loader_v1.08.106.bin
+  > rkdeveloptool wl 0x4000 u-boot/uboot.img
+  > rkdeveloptool wl 0x6000 u-boot/trust.img
+  > rkdeveloptool rd
+
+You should be able to get U-Boot log in console/UART2(baurdrate 1500000)
+For more detail, please reference to:
+http://opensource.rock-chips.com/wiki_Boot_option
diff --git a/board/pine64/pinebook-pro_rk3399/pinebook-pro_rk3399.c b/board/pine64/pinebook-pro_rk3399/pinebook-pro_rk3399.c
new file mode 100644
index 0000000000..89e2cc0565
--- /dev/null
+++ b/board/pine64/pinebook-pro_rk3399/pinebook-pro_rk3399.c
@@ -0,0 +1,52 @@
+	// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2016 Rockchip Electronics Co., Ltd
+ */
+
+#include <common.h>
+#include <asm/arch-rockchip/gpio.h>
+#include <asm/arch-rockchip/hardware.h>
+#include <asm/arch-rockchip/periph.h>
+#include <dm.h>
+#include <led.h>
+#include <power/regulator.h>
+#include <spl_gpio.h>
+
+#define GPIO0_BASE	0xff720000
+
+#if defined(CONFIG_SPL_BUILD) && !defined(CONFIG_TPL_BUILD)
+// State 1, enable green LED
+void rk3399_spl_board_init(void) {
+	struct rockchip_gpio_regs * const gpio = (void *)GPIO0_BASE;
+
+	puts("Pinebook Pro SPL init\n");
+	// Enable LED
+	spl_gpio_output(gpio, GPIO(BANK_B, 3), 1);
+}
+#elif defined(CONFIG_TPL_BUILD)
+// Stage 0, enable red LED
+void rk3399_spl_board_init(void) {
+	struct rockchip_gpio_regs * const gpio = (void *)GPIO0_BASE;
+
+	puts("Pinebook Pro TPL init\n");
+	// Enable red LED, disable green led
+	spl_gpio_output(gpio, GPIO(BANK_A, 2), 1);
+	spl_gpio_output(gpio, GPIO(BANK_B, 3), 0);
+}
+#endif
+
+#if !defined(CONFIG_SPL_BUILD)
+int last_stage_init(void) {
+	struct udevice *dev;
+	int ret;
+
+	puts("Pinebook Pro U-Boot init\n");
+
+	if ((ret = led_get_by_label("red:standby", &dev)))
+		debug("Failed to find standby led: %d\n", ret);
+	else
+		led_set_state(dev, LEDST_OFF);
+
+	return 0;
+}
+#endif
diff --git a/configs/pinebook-pro_defconfig b/configs/pinebook-pro_defconfig
new file mode 100644
index 0000000000..1a337dd5be
--- /dev/null
+++ b/configs/pinebook-pro_defconfig
@@ -0,0 +1,97 @@
+CONFIG_ARM=y
+CONFIG_ARCH_ROCKCHIP=y
+CONFIG_SYS_TEXT_BASE=0x00200000
+CONFIG_ROCKCHIP_RK3399=y
+CONFIG_TARGET_PINEBOOK_PRO_RK3399=y
+CONFIG_SPL_SPI_FLASH_SUPPORT=y
+CONFIG_SPL_SPI_SUPPORT=y
+CONFIG_DEBUG_UART_BASE=0xFF1A0000
+CONFIG_DEBUG_UART_CLOCK=24000000
+CONFIG_DEBUG_UART=y
+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3399-rockpro64.dtb"
+CONFIG_MISC_INIT_R=y
+# CONFIG_DISPLAY_CPUINFO is not set
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x10000
+CONFIG_SPL_MTD_SUPPORT=y
+CONFIG_SPL_ATF=y
+CONFIG_SPL_ATF_NO_PLATFORM_PARAM=y
+CONFIG_TPL=y
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_GPT=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
+# CONFIG_CMD_SETEXPR is not set
+CONFIG_CMD_PMIC=y
+CONFIG_CMD_REGULATOR=y
+CONFIG_CMD_MTDPARTS=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_DEFAULT_DEVICE_TREE="rk3399-rockpro64"
+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+CONFIG_ROCKCHIP_GPIO=y
+CONFIG_SYS_I2C_ROCKCHIP=y
+CONFIG_BOOTDELAY=0
+CONFIG_LED=y
+CONFIG_LED_GPIO=y
+CONFIG_MISC=y
+CONFIG_ROCKCHIP_EFUSE=y
+CONFIG_MMC_DW=y
+CONFIG_MMC_DW_ROCKCHIP=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_SDMA=y
+CONFIG_MMC_SDHCI_ROCKCHIP=y
+CONFIG_SPI_FLASH=y
+CONFIG_SPI_FLASH_GIGADEVICE=y
+CONFIG_SPI_FLASH_WINBOND=y
+CONFIG_DM_ETH=y
+CONFIG_PMIC_RK8XX=y
+CONFIG_REGULATOR_PWM=y
+CONFIG_REGULATOR_RK8XX=y
+CONFIG_PWM_ROCKCHIP=y
+CONFIG_RAM_RK3399_LPDDR4=y
+CONFIG_BAUDRATE=1500000
+CONFIG_DEBUG_UART_SHIFT=2
+CONFIG_ROCKCHIP_SPI=y
+CONFIG_SYSRESET=y
+CONFIG_USB=y
+CONFIG_ROCKCHIP_USB2_PHY=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_XHCI_DWC3=y
+# CONFIG_USB_XHCI_ROCKCHIP is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_HOST_ETHER=y
+CONFIG_USB_ETHER_ASIX=y
+CONFIG_USB_ETHER_ASIX88179=y
+CONFIG_USB_ETHER_MCS7830=y
+CONFIG_USB_ETHER_RTL8152=y
+CONFIG_USB_ETHER_SMSC95XX=y
+CONFIG_SPL_TINY_MEMSET=y
+CONFIG_ERRNO_STR=y
+CONFIG_HAVE_BLOCK_DEVICE=y
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_PCI_SUPPORT=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_CACHE=y
+CONFIG_NVME=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCIE_ROCKCHIP=y
+CONFIG_AUTOBOOT_PROMPT="Press q or Ctrl-C to interrupt autoboot\n"
+CONFIG_AUTOBOOT_KEYED=y
+CONFIG_AUTOBOOT_STOP_STR="q"
+CONFIG_AUTOBOOT_KEYED_CTRLC=y
+CONFIG_MTD=y
+CONFIG_DM_MTD=y
+CONFIG_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SPL_DM_SPI=y
+CONFIG_SPL_SPI_FLASH_TINY=n
+CONFIG_SPL_SPI_FLASH_SFDP_SUPPORT=y
+CONFIG_SPL_SPI_LOAD=y
+CONFIG_SYS_SPI_U_BOOT_OFFS=0x80000
diff --git a/include/configs/pinebook-pro_rk3399.h b/include/configs/pinebook-pro_rk3399.h
new file mode 100644
index 0000000000..543edcd6d4
--- /dev/null
+++ b/include/configs/pinebook-pro_rk3399.h
@@ -0,0 +1,42 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * (C) Copyright 2020 Tobias Schramm
+ */
+
+#ifndef __PINEBOOK_PRO_RK3399_H
+#define __PINEBOOK_PRO_RK3399_H
+
+#include <configs/rk3399_common.h>
+
+#define CONFIG_SYS_MMC_ENV_DEV 0
+
+#define SDRAM_BANK_SIZE			(2UL << 30)
+
+#if CONFIG_IS_ENABLED(CMD_MMC)
+	#define BOOT_TARGET_MMC_SD(func) \
+		func(MMC, mmc, 1)
+
+	#define BOOT_TARGET_MMC_EMMC(func) \
+		func(MMC, mmc, 0)
+#else
+	#define BOOT_TARGET_MMC_SD(func)
+	#define BOOT_TARGET_MMC_EMMC(func)
+#endif
+
+#if CONFIG_IS_ENABLED(CMD_SF)
+	#define BOOT_TARGET_SF(func) \
+		func(SF, sf, 0, u-boot-script)
+#else
+	#define BOOT_TARGET_SF(func)
+#endif
+
+#undef BOOT_TARGET_DEVICES
+#define BOOT_TARGET_DEVICES(func) \
+	BOOT_TARGET_MMC_SD(func) \
+	BOOT_TARGET_SF(func) \
+	BOOT_TARGET_MMC_EMMC(func) \
+	BOOT_TARGET_USB(func) \
+	BOOT_TARGET_PXE(func) \
+	BOOT_TARGET_DHCP(func)
+
+#endif
-- 
2.26.0

